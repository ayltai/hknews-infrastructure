---
- name: Copy SSL certificate
  become: true
  copy:
    src: "/etc/letsencrypt/live/{{ domain_name }}/fullchain.pem"
    dest: "{{ project_path }}/keystore.pem"
    remote_src: yes
    owner: root
    group: root
    mode: 0644
  when:
    - ansible_distribution == 'Ubuntu'
    - ansible_distribution_version == '18.04'

- name: Copy private key file
  become: true
  copy:
    src: "/etc/letsencrypt/live/{{ domain_name }}/privkey.pem"
    dest: "{{ project_path }}/private.key"
    remote_src: yes
    owner: root
    group: root
    mode: 0644
  when:
    - ansible_distribution == 'Ubuntu'
    - ansible_distribution_version == '18.04'

- name: Generate P12 certificate
  become: true
  command: |
    openssl pkcs12 \
    -export \
    -in /etc/letsencrypt/live/{{ domain_name }}/fullchain.pem \
    -inkey /etc/letsencrypt/live/{{ domain_name }}/privkey.pem \
    -password pass:{{ ssl_key }}
    -out {{ project_path }}/keystore.p12 \
    -name keystore
  args:
    creates: "{{ project_path }}/keystore.p12"
  when:
    - ansible_distribution == 'Ubuntu'
    - ansible_distribution_version == '18.04'

- name: Copy P12 certificate to classpath
  become: true
  copy:
    src: "{{ project_path }}/keystore.p12"
    dest: "{{ project_path }}/src/main/resources/keystore.p12"
    remote_src: true

- name: Gererate JKS certificate
  become: true
  command: |
    keytool \
    -importkeystore \
    -deststorepass {{ ssl_key }} \
    -destkeypass {{ ssl_key }} \
    -destkeystore {{ project_path }}/keystore.jks \
    -srckeystore {{ project_path }}/keystore.p12 \
    -srcstoretype PKCS12 \
    -srcstorepass {{ ssl_key }} \
    -alias keystore
  args:
    creates: "{{ project_path }}/keystore.jks"

- name: Copy P12 certificate to classpath
  become: true
  copy:
    src: "{{ project_path }}/keystore.jks"
    dest: "{{ project_path }}/src/main/resources/keystore.jks"
    remote_src: true

- name: Create artifact directory
  file:
    path: "{{ project_path }}/build/libs"
    state: directory
    mode: 0755
    recurse: yes

- name: Run script to download artifact
  script: download.sh
  args:
    chdir: "{{ project_path }}/build/libs/"
    creates: "{{ project_path }}/build/libs/hknews-backend-1.2.3.jar"
  environment:
    CIRCLECI_TOKEN: "{{ circleci_token }}"

- name: Copy script to start server
  become: true
  template:
    src: start.sh
    dest: "{{ project_path }}/start.sh"
    owner: root
    group: root
    mode: 0755

- name: Set Logz.io token environment variable
  become: true
  lineinfile:
    path: /etc/environment
    line: "LOGZIO_TOKEN={{ logzio_token }}"
  when:
    - ansible_distribution == 'Ubuntu'
    - ansible_distribution_version == '18.04'
