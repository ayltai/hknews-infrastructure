version: 2

references:

  ## Docker image configuration

  config: &config
    working_directory: ~/workspace
    docker:
      - image: ayltai/hknews-infrastructure:latest
    environment:
      TERM: dumb

jobs:

  check:
    <<: *config
    steps:
      - checkout
      - run:
          name: Check if Terraform scripts are properly formatted
          command: terraform fmt -check -write=false
          working_directory: terraform
      - run:
          name: Lint Ansible scripts
          command: ansible-lint ./playbook.yml
          working_directory: ansible

  deploy:
    <<: *config
    steps:
      - checkout
      - run:
          name: Configure credentials for accessing Terraform Cloud backend
          command: echo $TERRAFORM_TOKEN | base64 -di > ~/.terraformrc
      - run:
          name: Create .ssh directory to store SSH keys
          command: mkdir ~/.ssh
      - run:
          name: Configure SSH public key for accessing the system to be provisioned
          command: echo $SSH_PUBLIC_KEY | base64 -di > ~/.ssh/hknews.pub
      - run:
          name: Configure SSH private key for accessing the system to be provisioned
          command: echo $SSH_PRIVATE_KEY | base64 -di > ~/.ssh/hknews.pem
      - run:
          name: Change SSH private key permission
          command: chmod 600 ~/.ssh/hknews.pem
      - run:
          name: Initialize Terraform backend and plugins
          command: echo 1 | terraform init -no-color
          working_directory: terraform
      - run:
          name: Validate the syntax of Terraform scripts
          command: terraform validate -no-color
          working_directory: terraform
      - run:
          name: Plan for the changes
          command: terraform plan -no-color -out main
          working_directory: terraform
      - run:
          name: Apply the changes
          command: terraform apply -no-color main
          working_directory: terraform
          no_output_timeout: 40m

workflows:
  version: 2
  workflow:
    jobs:
      - check
      - deploy:
          requires:
            - check
          filters:
            branches:
              only:
                - master
